---
title: "Reading Data"
message: false
warning: false
toc: true
eval: false
---

## Method 1: Copy File Path Option

The [readr package](https://readr.tidyverse.org/) is the first package that we will learn about. This allows us to read in rectangular data like cvs files. 

This is the typical way it goes when you have data located on your computer.

```{r}
#| eval: false

library(tidyverse)

dataset <- read_csv(file_path)

head(dataset)
```
 

Copy the file path from your computer and paste it in the function. One downside to this is you have to manually replace each backslash `\` with a forwardslash `/` 

Here is an example: 

```{r}
#| eval: true
#| code-fold: false

library(tidyverse)

bob <- read_csv("C:/Users/Bethany/Downloads/US_Population_200_Years.csv")

head(bob)
```

## Method 2: "Import Dataset" Button Option

Another option is to use the "Import Dataset" button in the environment pane of RStudio. 

![](data_import_button.jpg)

![](data_import_pop_up.jpg)

The data will now be in your environment.

## Method 3: Getting data from a URL

Often you get your data from online somewhere like [GitHub](github.com) or [Kaggle](kaggle.com). While there is the option to download the file, then read it from your computer locally, like we just did above, there's also the option to read in data from a URL. 

A benefit is that less memory is used on your computer. Another is that you can send your analysis with the data being read in from a URL, and others will be able to run the script without any data issues. 

Below is an example.  
```{r}
#| eval: false
#| output: axis
library(tidyverse)

data1 <- read_csv("https://raw.githubusercontent.com/saundersg/Statistics-Notebook/master/Data/Rent.csv")

head(data1)
```

