{
  "hash": "6b8792334710085c862648c224935404",
  "result": {
    "markdown": "---\ntitle: \"Lesson 8: R vs. Python\"\nformat: html\nwarning: false\ntoc: true \n---\n\n::: {.cell}\n\n:::\n\n\n\nIn this article you will see the same analysis preformed in R & Python. Note the similarities and differences. \n\n::: {layout=\"[15,-10,15]\"}\n\n![](Rlogo.png)\n\n![](python-logo-only.png)\n\n:::\n\n::: columns\n::: {.column width=\"47.5%\"}\n\n<center>\n\n# R\n\n</center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n\ndat <- read_csv(\"C:/Users/Bethany/Downloads/grades.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_math <- c(\"FDMAT108\", \"MATH101\")\nis_stats <- c(\"MATH221A\", \"MATH325\")\nis_major <- c(\"CIT111\", \"CIT225\")\nis_general_ed <- c(\"FDAMF101\", \"FDENG101\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 <- dat %>% \n  select(!c(`Course Program`, `Catalog`, `Grade Type`)) %>% \n  filter(!str_starts(Grade, \"N/A\")) %>% \n  mutate(\n    Grade = fct_relevel(Grade, c(\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"F\", \"P\", \"W\")), \n    Semester = fct_relevel(Semester, \"WI19\", \"SP19\", \"FA19\", \"WI20\", \"SP20\", \"FA20\", \"WI21\", \"SP21\", \"FA21\", \"WI22\", \"SP22\", \"FA22\"), \n    `Grade Points` = case_when(\n      Grade == \"A\" ~ 4, \n      Grade == \"A-\" ~ 3.7, \n      Grade == \"B+\" ~ 3.4, \n      Grade == \"B\" ~ 3,\n      Grade == \"B-\" ~ 2.7, \n      Grade == \"C+\" ~ 2.4,\n      Grade == \"C\" ~ 2, \n      Grade == \"C-\" ~ 1.7,\n      Grade == \"D+\" ~ 0.4, \n      Grade == \"D\" ~ 1,\n      Grade == \"D-\" ~ 0.7, \n      Grade == \"F\" ~ 0,\n      Grade == \"UW\" ~ 0, \n      Grade == \"P\" ~ NA_real_,\n      Grade == \"W\" ~ NA_real_, \n      Grade == \"I\" ~ NA_real_,\n      Grade == \"T\" ~ NA_real_, \n      Grade == \"NR\" ~ NA_real_), \n    Course = str_replace(Course, \"-\\\\d\\\\d\", \"\"), \n    Course = str_replace(Course, \"\\\\W\", \"\"), \n    is_math = case_when(Course %in% is_math ~ 1, TRUE ~ 0),\n    is_stats = case_when(Course %in% is_stats ~ 1, TRUE ~ 0), \n    is_major = case_when(Course %in% is_major ~ 1, TRUE ~ 0), \n    is_general_ed = case_when(Course %in% is_general_ed ~ 1, TRUE ~ 0)\n)\n```\n:::\n\n\n<n>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  Course   `Course Title` Credits Grade Semester `Grade Points` is_math is_stats\n  <chr>    <chr>            <dbl> <fct> <fct>             <dbl>   <dbl>    <dbl>\n1 DANCE18… Social Dance,…       1 P     WI19                 NA       0        0\n2 FDAMF101 American Foun…       3 A     WI19                  4       0        0\n3 FDENG101 Writing & Rea…       3 A     WI19                  4       0        0\n4 FDMAT108 Math for the …       3 A     WI19                  4       1        0\n5 FDREL275 Teachings of …       2 A     WI19                  4       0        0\n6 GS106A   College Succe…       1 A     WI19                  4       0        0\n# … with 2 more variables: is_major <dbl>, is_general_ed <dbl>\n```\n:::\n:::\n\n\n:::\n::: {.column width=\"5%\"}\n:::\n::: {.column width=\"47.5%\"}\n\n<center>\n\n# Python \n\n</center>\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom plotnine import *\ndat = pd.read_csv(\"C:/Users/Bethany/Downloads/grades.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nis_math = (\"FDMAT108\", \"MATH101\")\nis_stats = (\"MATH221A\", \"MATH325\")\nis_major = (\"CIT111\", \"CIT225\")\nis_general_ed = (\"FDAMF101\", \"FDENG101\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ndat1 = (dat\n    .drop(['Course Program', 'Catalog', 'Grade Type'], axis = 1)\n    .query(\"~Grade.str.startswith('N/A')\")\n    .assign(\n        Grade = lambda X: pd.Categorical(X.Grade, categories = [\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"F\", \"P\", \"W\"]), \n        Semester = lambda X: pd.Categorical(X.Semester, [\"WI19\", \"SP19\", \"FA19\", \"WI20\", \"SP20\", \"FA20\", \"WI21\", \"SP21\", \"FA21\", \"WI22\", \"SP22\", \"FA22\"]),\n        Grade_Points = lambda X: X['Grade'].replace({\n            \"A\": 4, \n            \"A-\": 3.7,\n            \"B+\": 3.4, \n            \"B\": 3,\n            \"B-\": 2.7, \n            \"C+\": 2.4,\n            \"C\": 2, \n            \"C-\": 1.7,\n            \"D+\": 0.4, \n            \"D\": 1,\n            \"D-\": 0.7, \n            \"F\": 0,\n            \"UW\": 0, \n            \"P\": np.nan,\n            \"W\": np.nan, \n            \"I\": np.nan,\n            \"T\": np.nan, \n            \"NR\": np.nan}),\n        Course = lambda X: X['Course'].replace({r\"-\\d\\d\": \"\", r\"\\W\":\"\"}, regex=True),\n        is_math = lambda X: np.where(X['Course'].isin(is_math), True, False), \n        is_stats = lambda X: np.where(X['Course'].isin(is_stats), True, False), \n        is_major = lambda X: np.where(X['Course'].isin(is_major), 1, 0), \n        is_general_ed = lambda X: np.where(X['Course'].isin(is_general_ed), 1, 0)\n        )\n)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ndat1.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Course                     Course Title  ...  is_major is_general_ed\n0  DANCE180M          Social Dance, Beginning  ...         0             0\n1   FDAMF101             American Foundations  ...         0             1\n2   FDENG101  Writing & Reasoning Foundations  ...         0             1\n3   FDMAT108          Math for the Real World  ...         0             0\n4   FDREL275      Teachings of Book of Mormon  ...         0             0\n\n[5 rows x 10 columns]\n```\n:::\n:::\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}