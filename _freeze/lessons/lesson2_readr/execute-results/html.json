{
  "hash": "c8d67061509807dd808e71bf5bd9ca51",
  "result": {
    "markdown": "---\ntitle: \"Lesson 2: Reading Data\"\nsubtitle: Learning the readr package\nimage: https://raw.githubusercontent.com/rstudio/hex-stickers/main/SVG/readr.svg\ntoc: true\ncode-copy: false\n---\n\n\nWe will cover three main options how to importing data:\n\n- Built-in Datasets\n- Local Datasets (downloaded on your computer)\n- Online Datasets\n\nBelow are examples on each of these methods to import data\n\n# Built-in Datasets\n\nThe `iris` dataset is commonly used and built into R; no additional downloads are necessary. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(iris)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris)\n```\n:::\n\n\n<br>\n\n# Reading Data from Local CSV File\n\n## Option 1: Import Dataset Button\n\nAnother option is to use the \"Import Dataset\" button in the environment pane of RStudio. \n\n![](data_import_button.jpg)\n\n![](data_import_pop_up.jpg)\n\nThe data will now be available to you.\n\n\n## Option 2: Copy File Path Option\n\nThe [readr package](https://readr.tidyverse.org/) is the first package that we will learn about. This allows us to read in rectangular data like cvs files. \n\nThis is the typical way it goes when you have data located on your computer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndataset <- read_csv(file_path)\n\nhead(dataset)\n```\n:::\n\n\n\n<!-- The following applies for Windows Users only. Mac users can disregard this. -->\n\n<!-- \nCopy the file path from your computer and paste it in the function. One downside to this is you have to manually replace each backslash `\\` with a forwardslash `/` or add another backslash `\\` next to each other backslash `\\`. Look below for clarification.  \n-->\n\n\n:::{.callout-warning}\n# Windows Users: This will not run\n::: columns\n::: {.column width=\"20%\"}\nOne backslash `\\`\n:::\n::: {.column width=\"1%\"}\n:::\n::: {.column width=\"79%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- read_csv(\"C:\\Users\\name\\Downloads\\dataset.csv\")\n```\n:::\n\n:::\n:::\n:::\n:::{.callout-tip}\n# Windows Users: Either of these options will run\n::: columns\n::: {.column width=\"20%\"}\nTwo backslashes `\\\\`\n:::\n::: {.column width=\"1%\"}\n:::\n::: {.column width=\"79%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- read_csv(\"C:\\\\Users\\\\name\\\\Downloads\\\\dataset.csv\")\n```\n:::\n\n:::\n:::\n::: columns\n::: {.column width=\"20%\"}\nOne forwardslash `/`\n:::\n::: {.column width=\"1%\"}\n:::\n::: {.column width=\"79%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- read_csv(\"C:/Users/name/Downloads/dataset.csv\")\n```\n:::\n\n:::\n:::\n:::\n\n<br>\n\n## Option 3: URL Method\n\nOften you get your data from online somewhere like [GitHub](https://github.com/) or [Kaggle](https://kaggle.com/). While there is the option to download the file, then read it from your computer locally, like we just did above, there's also the option to read in data from a URL. \n\nA benefit is that less memory is used on your computer. Another is that you can send your analysis with the data being read in from a URL, and others will be able to run the script without any data issues. \n\nBelow is an example.  \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nhousing_data <- read_csv(\"https://raw.githubusercontent.com/saundersg/Statistics-Notebook/master/Data/Rent.csv\")\n```\n:::\n\n\n\n## How to Look at the Data?\n\n`view()`: this opens a new tab to view the data in a spreadsheet style like Excel\n\n`head()`: this returns the top six rows of a dataset, or the \"head\" of the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(housing_data)\nView(housing_data)\n```\n:::\n\n\n\n<br> \n\n# Practices \n\nFirst, let's make a folder on your computer to use for bootcamp. I suggest putting it in your downloads folder or your documents folder and call it \"R Bootcamp\". \n\nNext, click the \"Session\" button at the top of RStudio, then \"Set Working Directory\", then \"Choose Directory\" and use your computer's file directory to navigate to the folder you made for bootcamp. \n\nThis set your \"working directory\" which basically makes it easier for us to deal with files. \n\n\n\n## Practice 1: 📃 Insurance 📑\n\n**Instructions**: \n\n1. Click the link to download the <a href=\"insurance.csv\" download>insurance</a> dataset. \n2. Use the two commands learned from above to look at the data. \n\n**Starter Code:**\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\n\ninsurance <- read_csv(\"path_to_dataset\")\n```\n:::\n\n\n::: columns\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"80%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| age |  sex   |  bmi   | children | smoker |  region   |  charges  |\n|:---:|:------:|:------:|:--------:|:------:|:---------:|:---------:|\n| 19  | female | 27.900 |    0     |  yes   | southwest | 16884.924 |\n| 18  |  male  | 33.770 |    1     |   no   | southeast | 1725.552  |\n| 28  |  male  | 33.000 |    3     |   no   | southeast | 4449.462  |\n| 33  |  male  | 22.705 |    0     |   no   | northwest | 21984.471 |\n| 32  |  male  | 28.880 |    0     |   no   | northwest | 3866.855  |\n| 31  | female | 25.740 |    0     |   no   | southeast | 3756.622  |\n:::\n:::\n\n:::\n::: {.column width=\"10%\"}\n:::\n:::\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nlibrary(tidyverse)\n\ninsurance <- read_csv(\"https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/insurance.csv\")\n\nhead(insurance)\n\nView(insurance)\n```\n:::\n\n\n## Practice 2: 🚗 Honda Cars 🚙\n\n\n**Instructions**: \n\n1. Open this [website](https://raw.githubusercontent.com/saundersg/Statistics-Notebook/master/Data/CivicCorolla.csv) in a new tab and copy the URL, or right-click and copy the URL.  \n2. Use the two commands learned from above to look at the data. \n\n\n::: columns\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"80%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| Model | Trim | Year | Mileage | Price |\n|:-----:|:----:|:----:|:-------:|:-----:|\n| Civic |  LX  | 2013 |  52911  | 9900  |\n| Civic |  LX  | 2017 |  27966  | 15495 |\n| Civic |  LX  | 2016 |  21639  | 14995 |\n| Civic |  LX  | 2017 |  21893  | 15595 |\n| Civic |  LX  | 2015 |  39868  | 11498 |\n| Civic |  LX  | 2015 |  26416  | 14000 |\n:::\n:::\n\n:::\n::: {.column width=\"10%\"}\n:::\n:::\n\n\n**Starter Code:**\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\n\nbob <- read_csv(\"path_to_URL\")\n```\n:::\n\n\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nlibrary(tidyverse)\n\nbob <- read_csv(\"https://raw.githubusercontent.com/saundersg/Statistics-Notebook/master/Data/CivicCorolla.csv\")\n\nhead(bob)\n\nView(bob)\n```\n:::\n\n\n\n## Practice 3: 🦷 ToothGrowth 😁\n\n**Instructions**: \n\n1. Look at the `ToothGrowth` dataset (this dataset is built into R)\n\n::: columns\n::: {.column width=\"20%\"}\n:::\n::: {.column width=\"60%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| len  | supp | dose |\n|:----:|:----:|:----:|\n| 4.2  |  VC  | 0.5  |\n| 11.5 |  VC  | 0.5  |\n| 7.3  |  VC  | 0.5  |\n| 5.8  |  VC  | 0.5  |\n| 6.4  |  VC  | 0.5  |\n| 10.0 |  VC  | 0.5  |\n:::\n:::\n\n:::\n::: {.column width=\"20%\"}\n:::\n:::\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nhead(ToothGrowth)\n\nView(ToothGrowth)\n```\n:::\n\n\n\n## Practice 4: 📚 Student Performance Dataset 🧠\n\n\n**Instructions**: \n\n1. Click the link to download the <a href=\"StudentsPerformance.csv\" download>insurance</a> dataset. \n2. Use the two commands learned from above to look at the data.\n\n\n**Starter Code:**\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\n\ndataset <- read_csv(\"path_to_dataset\")\n```\n:::\n\n\n::: columns\n::: {.column width=\"5%\"}\n:::\n::: {.column width=\"90%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| gender | race/ethnicity | parental level of education |    lunch     | test preparation course | math score | reading score | writing score |\n|:------:|:--------------:|:---------------------------:|:------------:|:-----------------------:|:----------:|:-------------:|:-------------:|\n| female |    group B     |      bachelor's degree      |   standard   |          none           |     72     |      72       |      74       |\n| female |    group C     |        some college         |   standard   |        completed        |     69     |      90       |      88       |\n| female |    group B     |       master's degree       |   standard   |          none           |     90     |      95       |      93       |\n|  male  |    group A     |     associate's degree      | free/reduced |          none           |     47     |      57       |      44       |\n|  male  |    group C     |        some college         |   standard   |          none           |     76     |      78       |      75       |\n| female |    group B     |     associate's degree      |   standard   |          none           |     71     |      83       |      78       |\n:::\n:::\n\n:::\n::: {.column width=\"5%\"}\n:::\n:::\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nhead(student_performance)\n\nView(student_performance)\n```\n:::\n\n\n\n## Practice 5: 🏡 Rent Prices 🏘️\n\n**Instructions**: \n\n1. Open this [website](https://raw.githubusercontent.com/saundersg/Statistics-Notebook/master/Data/CivicCorolla.csv) and copy the URL. \n2. Use the two commands learned from above to look at the data. \n\n\n::: columns\n::: {.column width=\"10%\"}\n:::\n::: {.column width=\"80%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| Model | Trim | Year | Mileage | Price |\n|:-----:|:----:|:----:|:-------:|:-----:|\n| Civic |  LX  | 2013 |  52911  | 9900  |\n| Civic |  LX  | 2017 |  27966  | 15495 |\n| Civic |  LX  | 2016 |  21639  | 14995 |\n| Civic |  LX  | 2017 |  21893  | 15595 |\n| Civic |  LX  | 2015 |  39868  | 11498 |\n| Civic |  LX  | 2015 |  26416  | 14000 |\n:::\n:::\n\n:::\n::: {.column width=\"10%\"}\n:::\n:::\n\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nhead(bob)\n\nView(bob)\n```\n:::\n\n\n\n## Practice 6: 🌺 Iris 🌻\n\n**Instructions**: \n\n1. Look at the `iris` dataset (this dataset is built into R)\n\n::: columns\n::: {.column width=\"20%\"}\n:::\n::: {.column width=\"60%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n| Sepal.Length | Sepal.Width | Petal.Length | Petal.Width | Species |\n|:------------:|:-----------:|:------------:|:-----------:|:-------:|\n|     5.1      |     3.5     |     1.4      |     0.2     | setosa  |\n|     4.9      |     3.0     |     1.4      |     0.2     | setosa  |\n|     4.7      |     3.2     |     1.3      |     0.2     | setosa  |\n|     4.6      |     3.1     |     1.5      |     0.2     | setosa  |\n|     5.0      |     3.6     |     1.4      |     0.2     | setosa  |\n|     5.4      |     3.9     |     1.7      |     0.4     | setosa  |\n:::\n:::\n\n:::\n::: {.column width=\"20%\"}\n:::\n:::\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code Solution\"}\nhead(iris)\n\nView(iris)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}