{
  "hash": "8509f6a7ee0b9e39e2c7755a555141e6",
  "result": {
    "markdown": "---\ntitle: \"Lesson 5: Graphing 1/2\"\ntoc: true\nfig-align: center\nfig-width: 8\nfig-height: 3.5\ncode-copy: true\ncode-overflow: wrap\ncode-line-numbers: true\ncode-fold: true\ncode-tools: true\neval: true\n# toc: true\n---\n\n\n![](pictures/ggplot2.jpg){fig-align=\"center\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Data Used for Examples\"}\nlibrary(tidyverse)\ndat <- read_csv(\"https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/insurance.csv\")\n```\n:::\n\n\nThe four main plots we will go over today:\n\n- histogram\n- boxplot\n- scatterplot\n- bar plot\n\nWhat kinds of data do we have? \n\n- numerical\n- categorical \n- ordinal\n\n\n\n## Histogram: Counting the Number of Numeric Occurances\n\n###### X: Numeric, Y: N/A\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(dat, aes(x=bmi))+ \n   geom_histogram(bins = 50)+\n    labs(\n        title=\"Y-Axis Auto Counts the\\n Occurances of Each Number\",\n        x=\"Numeric Column: 'bmi'\")+\n    theme(axis.title = element_text(face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](lesson5_ggplot_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n## Bar Plot: Counting the Number of Categorical Occurances\n\n::: {.panel-tabset}\n\n## Method 1: geom_bar()  \n\n#### X: Categorical, Y: Auto Counts Categories\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(x=region))+\n    geom_bar()+\n    labs(\n        title=\"\", \n        x=\"Categorical Column: 'region'\", \n        y=\"Auto Counts the Occurances\\n of Each Category\")+\n    theme(axis.title = element_text(face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](lesson5_ggplot_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\n## Method 2: geom_col()\n\n#### X: Categorical, Y: Numeric\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data <- dat %>% \n    group_by(region) %>% \n    summarise(count = n()) \n\nggplot(plot_data, aes(x=region, y=count))+\n    geom_col()+\n    labs(\n        title=\"\", \n        x=\"Categorical Column: 'region'\", \n        y=\"Numeric Column: 'count'\")+\n    theme(axis.title = element_text(face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](lesson5_ggplot_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n:::\n\n## Boxplot\n\n#### X: Categorical, Y: Numeric\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(x=region, y=bmi))+\n    geom_boxplot()+\n    labs(x=\"Categorical Column: 'region'\", y=\"Numeric Column: 'bmi'\")+\n    theme(axis.title = element_text(face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](lesson5_ggplot_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n## Scatterplot\n\n#### X: Numeric, Y: Numeric\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dat, aes(x=age, y=bmi))+\n    geom_point()+\n    labs(x=\"Numeric Column: 'Age'\", y=\"Numeric Column: 'bmi'\")+\n    theme(axis.title = element_text(face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](lesson5_ggplot_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\n\n\n\n# Practice Exercises\n\nUse this code to get the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndat <- read_csv(\"https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/insurance.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 7\n    age sex      bmi children smoker region    charges\n  <dbl> <chr>  <dbl>    <dbl> <chr>  <chr>       <dbl>\n1    19 female  27.9        0 yes    southwest  16885.\n2    18 male    33.8        1 no     southeast   1726.\n3    28 male    33          3 no     southeast   4449.\n4    33 male    22.7        0 no     northwest  21984.\n5    32 male    28.9        0 no     northwest   3867.\n6    31 female  25.7        0 no     southeast   3757.\n```\n:::\n:::\n",
    "supporting": [
      "lesson5_ggplot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}